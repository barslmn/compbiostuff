[PROJECT]
project_name = VEP
output_dir = .
input_files = .
bed_dir = .
bed_file = .
output_files = runVEPpick

[GENERAL]
resource_dir = .
reference_genome = .

[PIPELINE]
pipeline = runVEPpick
docker_vep = docker run
	-u=0
	-v "${PROJECT:output_dir}":"/io"
	-v /home/bar/vep_data:/opt/vep/.vep
	-v "${GENERAL:resource_dir}":"/resources"
	# -v "/home/bar/perl5/lib/perl5/x86_64-linux-gnu-thread-multi:/perl5"
	# -e "PERL5LIB=/perl5:/opt/vep/src/ensembl-vep:/opt/vep/src/ensembl-vep/modules"
	ensemblorg/ensembl-vep:latest

[runVEPpick]
container = ${PIPELINE:docker_vep}
tool = ./vep
input_from = input_files
args =  --cache --refseq --everything
	# --offline
	--assembly GRCh37
	--flag_pick --pick_order ccds,tsl,rank,biotype,mane,appris,canonical,length
	--fork 8
	--format vcf --vcf --force_overwrite
	--fasta=/resources/${GENERAL:reference_genome}
	--dir_cache /opt/vep/.vep/ --dir_plugins /opt/vep/.vep/Plugins/
	--canonical
	--input_file /io/input_placeholder
	--output_file /io/output_placeholder
	--compress_output bgzip
	--plugin GO
	--plugin Phenotypes
	# --plugin Draw,output_placeholder,2000,100
	-custom /resources/hg19/clinvar.vcf.gz,ClinVar,vcf,exact,0,CLNSIG,CLNHGVS
	&& ${PIPELINE:docker_vep} rm /io/input_placeholder
suffix = _vep
ext = vcf.gz
output_dir = .
input_dir = .
